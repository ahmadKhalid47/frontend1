{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Raza\\\\source\\\\repos\\\\ReactApp\\\\frontend1\\\\src\\\\uploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const handleChange = event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    fetch(\"/upload\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => setImageUrl(data.url));\n  };\n  function submitFunc() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitFunc,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"lnUbrfC0/mRP7BtZupn1E3yPEuA=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","_s","imageUrl","setImageUrl","handleChange","event","file","target","files","formData","FormData","append","fetch","method","body","then","response","json","data","url","submitFunc","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed Raza/source/repos/ReactApp/frontend1/src/uploadImage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ImageUploader = () => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    fetch(\"/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setImageUrl(data.url));\r\n  };\r\n\r\n    function submitFunc() {\r\n        \r\n    }\r\n    \r\n    \r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleChange} />\r\n      {imageUrl && <img src={imageUrl} alt=\"Uploaded\" />}\r\n      <button onClick={submitFunc}>submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;IAE9BM,KAAK,CAAC,SAAS,EAAE;MACfC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKf,WAAW,CAACe,IAAI,CAACC,GAAG,CAAC,CAAC;EAC1C,CAAC;EAEC,SAASC,UAAUA,CAAA,EAAG,CAEtB;EAGF,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5CzB,QAAQ,iBAAIH,OAAA;MAAK6B,GAAG,EAAE1B,QAAS;MAAC2B,GAAG,EAAC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClD5B,OAAA;MAAQ+B,OAAO,EAAEV,UAAW;MAAAC,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5BID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}