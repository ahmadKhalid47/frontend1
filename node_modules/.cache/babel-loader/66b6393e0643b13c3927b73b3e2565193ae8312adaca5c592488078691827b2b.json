{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed Raza\\\\source\\\\repos\\\\ReactApp\\\\frontend1\\\\src\\\\PostComment.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport MyContext from \"./HomeMyContext\";\nimport axios from \"axios\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostComment(p) {\n  _s();\n  let {\n    commentInput,\n    setCommentInput,\n    postCommentdependency,\n    setPostCommentdependency,\n    token,\n    user,\n    setShowCommentInput\n  } = useContext(MyContext);\n  let {\n    target\n  } = p;\n  let apiKey = process.env.REACT_APP_API_KEY;\n  async function postComment() {\n    if (commentInput.trim() === \"\") {\n      return;\n    }\n    await axios.post(`${apiKey}/addComment/${user}/${target}`, {\n      comment: commentInput\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setPostCommentdependency(postCommentdependency + 1);\n    setCommentInput(\"\");\n    setShowCommentInput(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-start inputStyle\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      value: commentInput,\n      onChange: e => {\n        setCommentInput(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => postComment(),\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PostComment, \"7i60t6Pxcohbugx3mxSkeuAQ9ww=\");\n_c = PostComment;\nexport default PostComment;\nvar _c;\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"names":["useContext","MyContext","axios","Button","Form","jsxDEV","_jsxDEV","PostComment","p","_s","commentInput","setCommentInput","postCommentdependency","setPostCommentdependency","token","user","setShowCommentInput","target","apiKey","process","env","REACT_APP_API_KEY","postComment","trim","post","comment","headers","Authorization","className","children","Control","type","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed Raza/source/repos/ReactApp/frontend1/src/PostComment.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport MyContext from \"./HomeMyContext\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nfunction PostComment(p) {\r\n  let {\r\n    commentInput,\r\n    setCommentInput,\r\n    postCommentdependency,\r\n    setPostCommentdependency,\r\n    token,\r\n    user,\r\n    setShowCommentInput,\r\n  } = useContext(MyContext);\r\n  let { target } = p;\r\n  let apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  async function postComment() {\r\n    if (commentInput.trim() === \"\") {\r\n      return;\r\n    }\r\n    await axios.post(\r\n      `${apiKey}/addComment/${user}/${target}`,\r\n      {\r\n        comment: commentInput,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n    setPostCommentdependency(postCommentdependency + 1);\r\n    setCommentInput(\"\");\r\n    setShowCommentInput(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-start inputStyle\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        value={commentInput}\r\n        onChange={(e) => {\r\n          setCommentInput(e.target.value);\r\n        }}\r\n      />\r\n      <Button onClick={() => postComment()}>submit</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostComment;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,SAASC,WAAWA,CAACC,CAAC,EAAE;EAAAC,EAAA;EACtB,IAAI;IACFC,YAAY;IACZC,eAAe;IACfC,qBAAqB;IACrBC,wBAAwB;IACxBC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC,GAAGhB,UAAU,CAACC,SAAS,CAAC;EACzB,IAAI;IAAEgB;EAAO,CAAC,GAAGT,CAAC;EAClB,IAAIU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE1C,eAAeC,WAAWA,CAAA,EAAG;IAC3B,IAAIZ,YAAY,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9B;IACF;IACA,MAAMrB,KAAK,CAACsB,IAAI,CACb,GAAEN,MAAO,eAAcH,IAAK,IAAGE,MAAO,EAAC,EACxC;MACEQ,OAAO,EAAEf;IACX,CAAC,EACD;MACEgB,OAAO,EAAE;QACPC,aAAa,EAAEb;MACjB;IACF,CACF,CAAC;IACDD,wBAAwB,CAACD,qBAAqB,GAAG,CAAC,CAAC;IACnDD,eAAe,CAAC,EAAE,CAAC;IACnBK,mBAAmB,CAAC,KAAK,CAAC;EAC5B;EAEA,oBACEV,OAAA;IAAKsB,SAAS,EAAC,4DAA4D;IAAAC,QAAA,gBACzEvB,OAAA,CAACF,IAAI,CAAC0B,OAAO;MACXC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,YAAa;MACpBuB,QAAQ,EAAGC,CAAC,IAAK;QACfvB,eAAe,CAACuB,CAAC,CAACjB,MAAM,CAACe,KAAK,CAAC;MACjC;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFhC,OAAA,CAACH,MAAM;MAACoC,OAAO,EAAEA,CAAA,KAAMjB,WAAW,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC7B,EAAA,CA7CQF,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA+CpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}